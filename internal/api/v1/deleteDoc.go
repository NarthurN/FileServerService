package v1

import (
	"context"
	"log"
	"os"
	"strings"

	fileserverV1 "github.com/NarthurN/FileServerService/pkg/generated/api/fileserver/v1"
)

// DeleteDocument - —É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
func (a *api) DeleteDocument(ctx context.Context, params fileserverV1.DeleteDocumentParams) (fileserverV1.DeleteDocumentRes, error) {
	log.Printf("üîÑ API: –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ %s", params.ID)

	// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
	user, err := a.validateToken(ctx, params.Token)
	if err != nil {
		return &fileserverV1.UnauthorizedError{
			Error: fileserverV1.UnauthorizedErrorError{
				Code: 401,
				Text: "üö® –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω",
			},
		}, nil
	}

	// –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
	doc, err := a.service.GetDocument(ctx, params.ID)
	if err != nil {
		if strings.Contains(err.Error(), "not found") {
			return &fileserverV1.NotFoundError{
				Error: fileserverV1.NotFoundErrorError{
					Code: 404,
					Text: "üö® –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
				},
			}, nil
		}

		return &fileserverV1.InternalServerError{
			Error: fileserverV1.InternalServerErrorError{
				Code: 500,
				Text: "üö® –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç",
			},
		}, nil
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
	if doc.UserID != user.ID {
		return &fileserverV1.ForbiddenError{
			Error: fileserverV1.ForbiddenErrorError{
				Code: 403,
				Text: "üö® –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –¥–æ–∫—É–º–µ–Ω—Ç–∞ –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –µ–≥–æ",
			},
		}, nil
	}

	// –£–¥–∞–ª—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
	if doc.IsFile && doc.FilePath != "" {
		if err := os.Remove(doc.FilePath); err != nil {
			log.Printf("üö® API: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ - –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª %s: %v", doc.FilePath, err)
		}
	}

	// –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
	if err := a.service.DeleteDocument(ctx, params.ID); err != nil {
		return &fileserverV1.InternalServerError{
			Error: fileserverV1.InternalServerErrorError{
				Code: 500,
				Text: "üö® –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç",
			},
		}, nil
	}

	log.Printf("üéâ API: –î–æ–∫—É–º–µ–Ω—Ç %s —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω", params.ID)

	// –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–∏—é
	response := make(fileserverV1.DeleteDocumentResponseResponse)
	response[params.ID] = true

	return &fileserverV1.DeleteDocumentResponse{
		Response: response,
	}, nil
}
