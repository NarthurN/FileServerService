// Code generated by ogen, DO NOT EDIT.

package fileserver_v1

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateDocument implements createDocument operation.
//
// Загрузка нового документа (файл или JSON данные).
//
// POST /api/docs
func (UnimplementedHandler) CreateDocument(ctx context.Context, req *CreateDocumentRequestMultipart) (r CreateDocumentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteDocument implements deleteDocument operation.
//
// Удаление документа по его идентификатору.
//
// DELETE /api/docs/{id}
func (UnimplementedHandler) DeleteDocument(ctx context.Context, params DeleteDocumentParams) (r DeleteDocumentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDocument implements getDocument operation.
//
// Получение конкретного документа по его
// идентификатору.
//
// GET /api/docs/{id}
func (UnimplementedHandler) GetDocument(ctx context.Context, params GetDocumentParams) (r GetDocumentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDocumentHead implements getDocumentHead operation.
//
// HEAD запрос для получения заголовков конкретного
// документа.
//
// HEAD /api/docs/{id}
func (UnimplementedHandler) GetDocumentHead(ctx context.Context, params GetDocumentHeadParams) (r GetDocumentHeadRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDocuments implements listDocuments operation.
//
// Получение списка документов с возможностью
// фильтрации.
//
// GET /api/docs
func (UnimplementedHandler) ListDocuments(ctx context.Context, params ListDocumentsParams) (r ListDocumentsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListDocumentsHead implements listDocumentsHead operation.
//
// HEAD запрос для получения заголовков списка документов.
//
// HEAD /api/docs
func (UnimplementedHandler) ListDocumentsHead(ctx context.Context, params ListDocumentsHeadParams) (r ListDocumentsHeadRes, _ error) {
	return r, ht.ErrNotImplemented
}

// LoginUser implements loginUser operation.
//
// Получение токена авторизации по логину и паролю.
//
// POST /api/auth
func (UnimplementedHandler) LoginUser(ctx context.Context, req *LoginRequest) (r LoginUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// LogoutUser implements logoutUser operation.
//
// Завершение авторизованной сессии работы.
//
// DELETE /api/auth/{token}
func (UnimplementedHandler) LogoutUser(ctx context.Context, params LogoutUserParams) (r LogoutUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// RegisterUser implements registerUser operation.
//
// Создание нового пользователя с логином и паролем.
//
// POST /api/register
func (UnimplementedHandler) RegisterUser(ctx context.Context, req *RegisterRequest) (r RegisterUserRes, _ error) {
	return r, ht.ErrNotImplemented
}
